name: Release

on:
  push:
    branches: [main, staging, release]
  workflow_dispatch:
    inputs:
      release:
        type: choice
        description: Release type to make
        options: [rc, stable]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write

env:
  RELEASE_ID: ${{ github.run_id }}
  IS_LAST_COMMIT_BUMP: ${{ startsWith(github.event.head_commit.message, 'ci(bump):') }}

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      release_type: ${{ steps.set-release.outputs.type }}
      prerelease: ${{ steps.set-vars.outputs.prerelease }}
      devrelease: ${{ steps.set-vars.outputs.devrelease}}
      branch: ${{ steps.set-vars.outputs.branch }}
      changelog: ${{ steps.set-vars.outputs.changelog }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup git user (for changelog step)
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Set release type
        id: set-release
        run: |
          ref="${{ github.ref_name }}"

          if [[ "${ref}" == "main" ]]; then
            echo "type=dev" >> $GITHUB_OUTPUT
          elif [[ "${ref}" == "staging" ]]; then
            echo "type=rc" >> $GITHUB_OUTPUT
          else
            echo "type=stable" >> $GITHUB_OUTPUT
          fi

      - name: Check for pre-release configuration
        id: set-vars
        run: |
          id=${{ env.RELEASE_ID }}
          type=${{ steps.set-release.outputs.type }}

          echo "branch=release/${type}-${id}" >> $GITHUB_OUTPUT

          if [[ "$type" == "stable" || "$type" == "rc" ]]; then
            echo "changelog=true" >> $GITHUB_OUTPUT
          fi

          if [[ "$type" == "dev" ]]; then
            echo "devrelease=${id}" >> $GITHUB_OUTPUT
          fi

          if [[ "$type" == "rc" ]]; then
            echo "prerelease=rc" >> $GITHUB_OUTPUT
          fi

  release_pr:
    runs-on: ubuntu-latest
    needs: setup
    if: ${{ !startsWith(github.event.head_commit.message, 'ci(bump)') }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - id: cz
        name: Create bump and changelog
        uses: commitizen-tools/commitizen-action@master
        with:
          changelog: ${{ needs.setup.outputs.changelog || false }}
          prerelease: ${{ needs.setup.outputs.prerelease }}
          devrelease: ${{ needs.setup.outputs.devrelease }}
          push: false
          commit: false

      - name: Save outputs
        id: save-outputs
        run: |
          commit_message="ci(bump): release ${{ env.REVISION }}"
          echo "commit_message=${commit_message}" >> $GITHUB_OUTPUT

      - name: Bump cargo
        run: cargo update --workspace

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.REPO_TOKEN }}
          commit-message: ${{ steps.save-outputs.outputs.commit_message }}
          title: ${{ steps.save-outputs.outputs.commit_message }}
          branch: ${{ needs.setup.outputs.branch }}

      - name: Check outputs
        if: ${{ steps.cpr.outputs.pull-request-number }}
        run: |
          echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
          echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"

  tag_version:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.event.head_commit.message, 'ci(bump)') }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version from commit
        id: get-tag
        run: |
          last_commit=${{ github.event.push.head_commit.message }}
          version=$(echo "${last_commit}" | sed 's/^ci(bump): release //')
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Create and push tag to ref
        run: |
          version=${{ steps.get-tag.outputs.version }}
          git tag v${version}
          git tag -l
          git push origin main --tags

  # release:
  #   runs-on: ubuntu-latest
  #   needs: changelog
  #   if: github.ref == 'refs/heads/release'
  #
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #
  #     - name: Release
  #       uses: softprops/action-gh-release@v1
  #       with:
  #         body_path: body.md
  #         tag_name: ${{ env.REVISION }}
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #
  # notify:
  #   runs-on: ubuntu-latest
  #   if: failure()
  #
  #   steps:
  #     - name: Error Notification
  #       run: |-
  #         echo "An error occurred during the release process"
  #  # Optionally, send a notification to Slack or email
