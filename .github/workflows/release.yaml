name: Release

on:
  push:
    branches: [main, staging, release]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write

env:
  RELEASE_BRANCH: bump-release/main

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      prerelease: ${{ steps.set-prerelease.outputs.prerelease }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup git user (for changelog step)
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Check for pre-release configuration
        id: set-prerelease
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            echo "prerelease=alpha" >> $GITHUB_OUTPUT
          elif [[ "${GITHUB_REF}" == "refs/heads/staging" ]]; then
            echo "prerelease=rc" >> $GITHUB_OUTPUT
          else
            echo "prerelease=false" >> $GITHUB_OUTPUT
          fi

  changelog:
    runs-on: ubuntu-latest
    needs: setup
    outputs:
      version: ${{ steps.save-outputs.outputs.version }}
      commit_message: ${{ steps.save-outputs.outputs.commit_message }}
      release_file: ${{ steps.save-outputs.outputs.release_file }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - id: cz
        name: Create bump and changelog
        uses: commitizen-tools/commitizen-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          changelog_increment_filename: body.md
          prerelease: ${{ needs.setup.outputs.prerelease }}
          branch: ${{ env.RELEASE_BRANCH }}
          push: false
          commit: false

      - name: Save outputs
        id: save-outputs
        run: |
          version=${{ steps.cz.outputs.version }}
          commit_message="ci(bump): release ${version}"
          release_file="release-${{ steps.cz.outputs.version }}"

          cp body.md ${release_file}.md

          echo "version=${version}" >> $GITHUB_OUTPUT
          echo "commit_message=${commit_message}" >> $GITHUB_OUTPUT
          echo "release_file=${release_file}" >> $GITHUB_OUTPUT

      - name: Cache Release File
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.save-outputs.outputs.release_file }}
          path: ${{ steps.save-outputs.outputs.release_file }}.md

  create_pr:
    runs-on: ubuntu-latest
    needs: changelog

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Release File
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.changelog.outputs.release_file }}
      - run: cat ${{ needs.changelog.outputs.release_file }}.md

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: ${{ needs.changelog.outputs.commit_message }}
          title: Release ${{ needs.changelog.outputs.version }}
          body-path: ${{ needs.changelog.outputs.release_file }}.md
          branch: ${{ env.RELEASE_BRANCH }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check outputs
        if: ${{ steps.cpr.outputs.pull-request-number }}
        run: |
          echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
          echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"

  release:
    runs-on: ubuntu-latest
    needs: changelog
    if: github.ref == 'refs/heads/release'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: body.md
          tag_name: ${{ needs.changelog.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify:
    runs-on: ubuntu-latest
    if: failure()

    steps:
      - name: Error Notification
        run: |-
          echo "An error occurred during the release process"
          # Optionally, send a notification to Slack or email
