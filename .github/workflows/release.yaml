name: Release

on:
  push:
    branches: [main, staging, release]
  workflow_dispatch:
    inputs:
      release:
        type: choice
        description: Release type to trigger
        options: [rc, stable]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write

env:
  RELEASE_TYPE: ${{ inputs.release || toJSON('dev') }}
  RELEASE_ID: ${{ github.event.pull_request.number || github.run_id }}

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      prerelease: ${{ steps.set-vars.outputs.prerelease }}
      devrelease: ${{ steps.set-vars.outputs.devrelease }}
      branch: ${{ steps.set-branch.outputs.branch }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup git user (for changelog step)
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Setting branch name
        id: set-branch
        run: |
          echo "branch=release/${{ env.RELEASE_TYPE }}-${{ env.RELEASE_ID }}" >> $GITHUB_OUTPUT

      - name: Check for pre-release configuration
        id: set-vars
        run: |
          id=${{ env.RELEASE_ID }}
          type=${{ env.RELEASE_TYPE }}

          if [[ "${type}" == "dev" ]]; then
            echo "devrelease=${id}" >> $GITHUB_OUTPUT
          elif [[ "${type}" == "rc" ]]; then
            echo "prerelease=${type}" >> $GITHUB_OUTPUT
          fi

  changelog:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - id: cz
        name: Create bump and changelog
        uses: commitizen-tools/commitizen-action@master
        with:
          changelog_increment_filename: ./tmp/body.md
          prerelease: ${{ needs.setup.outputs.prerelease }}
          devrelease: ${{ needs.setup.outputs.devrelease }}
          branch: ${{ needs.setup.outputs.branch }}
          push: false
          commit: false

      - name: Save outputs
        id: save-outputs
        run: |
          commit_message="ci(bump): release ${{ env.REVISION }}"
          echo "commit_message=${commit_message}" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: ${{ steps.save-outputs.outputs.commit_message }}
          title: ${{ steps.save-outputs.outputs.commit_message }}
          branch: ${{ needs.setup.outputs.branch }}
          body-path: ./tmp/body.md

      - name: Check outputs
        if: ${{ steps.cpr.outputs.pull-request-number }}
        run: |
          echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
          echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"

  release:
    runs-on: ubuntu-latest
    needs: changelog
    if: github.ref == 'refs/heads/release'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: body.md
          tag_name: ${{ env.REVISION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify:
    runs-on: ubuntu-latest
    if: failure()

    steps:
      - name: Error Notification
        run: |-
          echo "An error occurred during the release process"
          # Optionally, send a notification to Slack or email
